/*package bgkdfe;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;
import com.maxeler.maxcompiler.v2.managers.standard.Manager.IOType;

class bgkDFEManager{
	public static void main(String[] args) {
		EngineParameters params = new EngineParameters(args);
		Manager manager = new Manager(params);
		Kernel kernel = new bgkDFEKernel(manager.makeKernelParameters());
		manager.setAllowNonMultipleTransitions(true);
		manager.setKernel(kernel);
		manager.setIO(IOType.ALL_CPU);
		manager.createSLiCinterface();
		manager.build();
	}
}*/

package bgkdfe;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.custom.blocks.KernelBlock;
import com.maxeler.platform.max5.manager.MAX5CManager;

public class bgkDFEManager extends MAX5CManager {

	public bgkDFEManager(EngineParameters params) {
		super(params);
		Kernel kernel = new bgkDFEKernel(makeKernelParameters("bgkDFEKernel"));
		KernelBlock kernelBlock = addKernel(kernel);
		kernelBlock.getInput("inVector") <== addStreamFromCPU("inVector");
		addStreamToCPU("outVector") <== kernelBlock.getOutput("outVector");
	}

	public static void main(String[] args) {
		EngineParameters params = new EngineParameters(args);
		MAX5CManager manager = new bgkDFEManager(params);
		manager.build();
	}
}
